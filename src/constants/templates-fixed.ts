import { NodeTemplate, TemplateCategory } from '../types/studio.js';

// Pre-built workflow templates
export const WORKFLOW_TEMPLATES: NodeTemplate[] = [
  // Business Process Templates
  {
    id: 'user-onboarding',
    name: 'User Onboarding Process',
    description: 'Complete user onboarding workflow with email verification, profile setup, and welcome notifications',
    category: 'business-process',
    icon: '👤',
    tags: ['onboarding', 'user', 'email', 'notification'],
    nodes: [
      {
        type: 'start',
        position: { x: 100, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Start',
          description: 'User registration initiated',
          icon: '▶️',
          properties: {},
          category: 'flow-control',
        },
        style: {
          backgroundColor: 0x10b981,
          borderColor: 0x059669,
          borderWidth: 2,
          borderRadius: 20,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'bold',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'email',
        position: { x: 300, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Send Verification',
          description: 'Send email verification',
          icon: '📧',
          properties: {
            to: '{{user.email}}',
            subject: 'Verify Your Email',
            body: 'Click the link to verify your email: {{verificationLink}}',
            attachments: [],
          },
          category: 'communication',
        },
        style: {
          backgroundColor: 0x3b82f6,
          borderColor: 0x2563eb,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'wait',
        position: { x: 500, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Wait for Verification',
          description: 'Wait for user to verify email',
          icon: '⏳',
          properties: {
            condition: 'user.emailVerified === true',
            timeout: 86400000, // 24 hours
          },
          category: 'flow-control',
        },
        style: {
          backgroundColor: 0x64748b,
          borderColor: 0x475569,
          borderWidth: 2,
          borderRadius: 20,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'action',
        position: { x: 700, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Setup Profile',
          description: 'Initialize user profile',
          icon: '⚡',
          properties: {
            actionType: 'database',
            timeout: 30000,
            retryCount: 3,
          },
          category: 'business-logic',
        },
        style: {
          backgroundColor: 0x3b82f6,
          borderColor: 0x2563eb,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'notification',
        position: { x: 900, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Welcome Message',
          description: 'Send welcome notification',
          icon: '🔔',
          properties: {
            title: 'Welcome!',
            message: 'Your account has been set up successfully.',
            type: 'success',
            channels: ['email', 'sms'],
          },
          category: 'communication',
        },
        style: {
          backgroundColor: 0xf59e0b,
          borderColor: 0xd97706,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'end',
        position: { x: 1100, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Complete',
          description: 'Onboarding completed',
          icon: '⏹️',
          properties: {},
          category: 'flow-control',
        },
        style: {
          backgroundColor: 0xef4444,
          borderColor: 0xdc2626,
          borderWidth: 2,
          borderRadius: 20,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'bold',
          shadow: true,
          opacity: 1,
        },
      },
    ],
    connections: [
      {
        sourceId: 'start-onboarding',
        targetId: 'email-verification',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'email-verification',
        targetId: 'wait-verification',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'wait-verification',
        targetId: 'profile-setup',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'profile-setup',
        targetId: 'welcome-notification',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'welcome-notification',
        targetId: 'end-onboarding',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
    ],
    viewport: { x: 0, y: 0, zoom: 1 },
    createdAt: new Date('2024-01-15'),
    updatedAt: new Date('2024-01-15'),
    author: 'System',
    version: '1.0.0',
  },

  // Data Pipeline Templates
  {
    id: 'data-etl-pipeline',
    name: 'ETL Data Pipeline',
    description: 'Extract, Transform, Load data pipeline with validation and error handling',
    category: 'data-pipeline',
    icon: '🔄',
    tags: ['etl', 'data', 'pipeline', 'validation'],
    nodes: [
      {
        type: 'start',
        position: { x: 100, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Start ETL',
          description: 'Begin data extraction',
          icon: '▶️',
          properties: {},
          category: 'flow-control',
        },
        style: {
          backgroundColor: 0x10b981,
          borderColor: 0x059669,
          borderWidth: 2,
          borderRadius: 20,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'bold',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'database',
        position: { x: 300, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Extract Data',
          description: 'Extract data from source',
          icon: '🗄️',
          properties: {
            operation: 'select',
            table: 'source_table',
            query: 'SELECT * FROM source_table WHERE updated_at > :last_run',
          },
          category: 'database-storage',
        },
        style: {
          backgroundColor: 0x64748b,
          borderColor: 0x475569,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'data-validation',
        position: { x: 500, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Validate Data',
          description: 'Validate extracted data',
          icon: '✅',
          properties: {
            rules: [
              { field: 'id', rule: 'required', message: 'ID is required' },
              { field: 'email', rule: 'email', message: 'Invalid email format' },
            ],
            strict: false,
          },
          category: 'data-processing',
        },
        style: {
          backgroundColor: 0xec4899,
          borderColor: 0xdb2777,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'data-transform',
        position: { x: 700, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Transform Data',
          description: 'Transform data format',
          icon: '🔄',
          properties: {
            transformation: `
              return data.map(item => ({
                ...item,
                fullName: \`\${item.firstName} \${item.lastName}\`,
                processedAt: new Date().toISOString()
              }));
            `,
            inputFormat: 'json',
            outputFormat: 'json',
          },
          category: 'data-processing',
        },
        style: {
          backgroundColor: 0xf59e0b,
          borderColor: 0xd97706,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'database',
        position: { x: 900, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Load Data',
          description: 'Load transformed data',
          icon: '🗄️',
          properties: {
            operation: 'insert',
            table: 'target_table',
            query: 'INSERT INTO target_table VALUES :data',
          },
          category: 'database-storage',
        },
        style: {
          backgroundColor: 0x64748b,
          borderColor: 0x475569,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'notification',
        position: { x: 1100, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Notify Success',
          description: 'Send success notification',
          icon: '🔔',
          properties: {
            title: 'ETL Complete',
            message: 'Data pipeline executed successfully',
            type: 'success',
            channels: ['email'],
          },
          category: 'communication',
        },
        style: {
          backgroundColor: 0xf59e0b,
          borderColor: 0xd97706,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'end',
        position: { x: 1300, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'ETL Complete',
          description: 'ETL process finished',
          icon: '⏹️',
          properties: {},
          category: 'flow-control',
        },
        style: {
          backgroundColor: 0xef4444,
          borderColor: 0xdc2626,
          borderWidth: 2,
          borderRadius: 20,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'bold',
          shadow: true,
          opacity: 1,
        },
      },
    ],
    connections: [
      {
        sourceId: 'extract-start',
        targetId: 'extract-data',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'extract-data',
        targetId: 'validate-data',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'validate-data',
        targetId: 'transform-data',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'transform-data',
        targetId: 'load-data',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'load-data',
        targetId: 'send-notification',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'send-notification',
        targetId: 'etl-complete',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
    ],
    viewport: { x: 0, y: 0, zoom: 1 },
    createdAt: new Date('2024-01-15'),
    updatedAt: new Date('2024-01-15'),
    author: 'System',
    version: '1.0.0',
  },

  // AI Workflow Templates
  {
    id: 'content-moderation',
    name: 'AI Content Moderation',
    description: 'Automated content moderation using AI for text analysis and image processing',
    category: 'ai-workflow',
    icon: '🤖',
    tags: ['ai', 'moderation', 'content', 'text', 'image'],
    nodes: [
      {
        type: 'webhook',
        position: { x: 100, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Content Received',
          description: 'Receive content via webhook',
          icon: '📥',
          properties: {
            endpoint: '/api/content-moderate',
            secret: '{{webhook_secret}}',
          },
          category: 'integration',
        },
        style: {
          backgroundColor: 0x3b82f6,
          borderColor: 0x2563eb,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'sentiment-analysis',
        position: { x: 300, y: 50 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Analyze Text',
          description: 'Analyze text sentiment',
          icon: '😊',
          properties: {
            model: 'sentiment-model-v1',
            text: '{{content.text}}',
            language: 'en',
          },
          category: 'ai-ml',
        },
        style: {
          backgroundColor: 0xec4899,
          borderColor: 0xdb2777,
          borderWidth: 2,
          borderRadius: 12,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'image-processing',
        position: { x: 300, y: 150 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Analyze Image',
          description: 'Analyze image content',
          icon: '🖼️',
          properties: {
            operation: 'analyze',
            model: 'image-analysis-v1',
            imageUrl: '{{content.imageUrl}}',
          },
          category: 'ai-ml',
        },
        style: {
          backgroundColor: 0xf97316,
          borderColor: 0xea580c,
          borderWidth: 2,
          borderRadius: 12,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'decision',
        position: { x: 500, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Check Moderation',
          description: 'Decide if content passes moderation',
          icon: '🔀',
          properties: {
            conditions: [
              {
                expression: 'sentiment.score < 0.3 && !imageAnalysis.containsInappropriate',
                label: 'Safe Content'
              }
            ],
            defaultPath: 'false',
          },
          category: 'flow-control',
        },
        style: {
          backgroundColor: 0xf59e0b,
          borderColor: 0xd97706,
          borderWidth: 2,
          borderRadius: 4,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'action',
        position: { x: 700, y: 50 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Approve Content',
          description: 'Mark content as approved',
          icon: '⚡',
          properties: {
            actionType: 'database',
            timeout: 30000,
            retryCount: 3,
          },
          category: 'business-logic',
        },
        style: {
          backgroundColor: 0x10b981,
          borderColor: 0x059669,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'action',
        position: { x: 700, y: 150 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Reject Content',
          description: 'Mark content as rejected',
          icon: '⚡',
          properties: {
            actionType: 'database',
            timeout: 30000,
            retryCount: 3,
          },
          category: 'business-logic',
        },
        style: {
          backgroundColor: 0xef4444,
          borderColor: 0xdc2626,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'webhook-response',
        position: { x: 900, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Send Response',
          description: 'Send moderation result',
          icon: '📤',
          properties: {
            statusCode: 200,
            headers: { 'Content-Type': 'application/json' },
            body: '{"status": "{{moderationResult}}", "contentId": "{{content.id}}"}',
          },
          category: 'communication',
        },
        style: {
          backgroundColor: 0x8b5cf6,
          borderColor: 0x7c3aed,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
    ],
    connections: [
      {
        sourceId: 'content-received',
        targetId: 'text-analysis',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'content-received',
        targetId: 'image-analysis',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'text-analysis',
        targetId: 'moderation-decision',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'image-analysis',
        targetId: 'moderation-decision',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'moderation-decision',
        targetId: 'approve-content',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: 'Approved',
        style: {
          color: 0x10b981,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'moderation-decision',
        targetId: 'reject-content',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: 'Rejected',
        style: {
          color: 0xef4444,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'approve-content',
        targetId: 'send-response',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'reject-content',
        targetId: 'send-response',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
    ],
    viewport: { x: 0, y: 0, zoom: 1 },
    createdAt: new Date('2024-01-15'),
    updatedAt: new Date('2024-01-15'),
    author: 'System',
    version: '1.0.0',
  },

  // Integration Templates
  {
    id: 'api-orchestration',
    name: 'API Orchestration',
    description: 'Orchestrate multiple API calls with error handling and response aggregation',
    category: 'integration',
    icon: '🔗',
    tags: ['api', 'orchestration', 'error-handling', 'aggregation'],
    nodes: [
      {
        type: 'start',
        position: { x: 100, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'API Request',
          description: 'Receive API orchestration request',
          icon: '▶️',
          properties: {},
          category: 'flow-control',
        },
        style: {
          backgroundColor: 0x10b981,
          borderColor: 0x059669,
          borderWidth: 2,
          borderRadius: 20,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'bold',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'parallel',
        position: { x: 300, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Parallel APIs',
          description: 'Execute multiple APIs in parallel',
          icon: '⚡',
          properties: {
            branches: 3,
            waitForAll: true,
          },
          category: 'flow-control',
        },
        style: {
          backgroundColor: 0x84cc16,
          borderColor: 0x65a30d,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'api-call',
        position: { x: 500, y: 50 },
        size: { width: 120, height: 60 },
        data: {
          label: 'User Service',
          description: 'Call user service API',
          icon: '🌐',
          properties: {
            url: 'https://api.example.com/users/{{userId}}',
            method: 'GET',
            headers: { 'Authorization': 'Bearer {{token}}' },
            timeout: 30000,
          },
          category: 'integration',
        },
        style: {
          backgroundColor: 0x10b981,
          borderColor: 0x059669,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'api-call',
        position: { x: 500, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Product Service',
          description: 'Call product service API',
          icon: '🌐',
          properties: {
            url: 'https://api.example.com/products',
            method: 'GET',
            headers: { 'Authorization': 'Bearer {{token}}' },
            timeout: 30000,
          },
          category: 'integration',
        },
        style: {
          backgroundColor: 0x3b82f6,
          borderColor: 0x2563eb,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'api-call',
        position: { x: 500, y: 150 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Order Service',
          description: 'Call order service API',
          icon: '🌐',
          properties: {
            url: 'https://api.example.com/orders/{{userId}}',
            method: 'GET',
            headers: { 'Authorization': 'Bearer {{token}}' },
            timeout: 30000,
          },
          category: 'integration',
        },
        style: {
          backgroundColor: 0x8b5cf6,
          borderColor: 0x7c3aed,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'data-transform',
        position: { x: 700, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Aggregate Data',
          description: 'Combine API responses',
          icon: '🔄',
          properties: {
            transformation: `
              return {
                user: responses.userApi,
                products: responses.productApi,
                orders: responses.orderApi,
                timestamp: new Date().toISOString()
              };
            `,
            inputFormat: 'json',
            outputFormat: 'json',
          },
          category: 'data-processing',
        },
        style: {
          backgroundColor: 0xf59e0b,
          borderColor: 0xd97706,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'webhook-response',
        position: { x: 900, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Send Response',
          description: 'Return aggregated data',
          icon: '📤',
          properties: {
            statusCode: 200,
            headers: { 'Content-Type': 'application/json' },
            body: '{{aggregatedData}}',
          },
          category: 'communication',
        },
        style: {
          backgroundColor: 0x8b5cf6,
          borderColor: 0x7c3aed,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
    ],
    connections: [
      {
        sourceId: 'api-start',
        targetId: 'parallel-apis',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'parallel-apis',
        targetId: 'user-api',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'parallel-apis',
        targetId: 'product-api',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'parallel-apis',
        targetId: 'order-api',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'user-api',
        targetId: 'aggregate-results',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'product-api',
        targetId: 'aggregate-results',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'order-api',
        targetId: 'aggregate-results',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'aggregate-results',
        targetId: 'send-response',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
    ],
    viewport: { x: 0, y: 0, zoom: 1 },
    createdAt: new Date('2024-01-15'),
    updatedAt: new Date('2024-01-15'),
    author: 'System',
    version: '1.0.0',
  },

  // Automation Templates
  {
    id: 'scheduled-backup',
    name: 'Scheduled Database Backup',
    description: 'Automated database backup with notifications and error handling',
    category: 'automation',
    icon: '⏰',
    tags: ['backup', 'database', 'scheduled', 'automation'],
    nodes: [
      {
        type: 'timer',
        position: { x: 100, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Daily Backup',
          description: 'Trigger daily at 2 AM',
          icon: '🕐',
          properties: {
            schedule: '0 2 * * *',
            timezone: 'UTC',
          },
          category: 'flow-control',
        },
        style: {
          backgroundColor: 0x64748b,
          borderColor: 0x475569,
          borderWidth: 2,
          borderRadius: 12,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'database',
        position: { x: 300, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Backup DB',
          description: 'Create database backup',
          icon: '🗄️',
          properties: {
            operation: 'custom',
            table: '',
            query: 'BACKUP DATABASE main TO DISK = \'backup.bak\'',
          },
          category: 'database-storage',
        },
        style: {
          backgroundColor: 0x64748b,
          borderColor: 0x475569,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 's3-storage',
        position: { x: 500, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Upload to S3',
          description: 'Upload backup to cloud storage',
          icon: '☁️',
          properties: {
            operation: 'upload',
            bucket: 'backups-bucket',
            key: 'daily/{{timestamp}}.bak',
            region: 'us-east-1',
          },
          category: 'database-storage',
        },
        style: {
          backgroundColor: 0xf59e0b,
          borderColor: 0xd97706,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'action',
        position: { x: 700, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Verify Backup',
          description: 'Verify backup integrity',
          icon: '⚡',
          properties: {
            actionType: 'script',
            timeout: 300000,
            retryCount: 2,
          },
          category: 'business-logic',
        },
        style: {
          backgroundColor: 0x3b82f6,
          borderColor: 0x2563eb,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 's3-storage',
        position: { x: 900, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Cleanup Old',
          description: 'Remove backups older than 30 days',
          icon: '☁️',
          properties: {
            operation: 'delete',
            bucket: 'backups-bucket',
            key: 'daily/*',
            region: 'us-east-1',
          },
          category: 'database-storage',
        },
        style: {
          backgroundColor: 0xf97316,
          borderColor: 0xea580c,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
      {
        type: 'email',
        position: { x: 1100, y: 100 },
        size: { width: 120, height: 60 },
        data: {
          label: 'Send Report',
          description: 'Send backup completion report',
          icon: '📧',
          properties: {
            to: 'admin@example.com',
            subject: 'Daily Backup Report - {{date}}',
            body: 'Backup completed successfully at {{timestamp}}',
            attachments: [],
          },
          category: 'communication',
        },
        style: {
          backgroundColor: 0x3b82f6,
          borderColor: 0x2563eb,
          borderWidth: 2,
          borderRadius: 8,
          textColor: 0xffffff,
          fontSize: 14,
          fontWeight: 'normal',
          shadow: true,
          opacity: 1,
        },
      },
    ],
    connections: [
      {
        sourceId: 'schedule-trigger',
        targetId: 'backup-database',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'backup-database',
        targetId: 'upload-backup',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'upload-backup',
        targetId: 'verify-backup',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'verify-backup',
        targetId: 'cleanup-old',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
      {
        sourceId: 'cleanup-old',
        targetId: 'send-report',
        sourceHandle: 'output',
        targetHandle: 'input',
        label: '',
        style: {
          color: 0x3b82f6,
          width: 2,
          opacity: 1,
          animated: false,
          dashed: false,
          arrowSize: 6,
        },
      },
    ],
    viewport: { x: 0, y: 0, zoom: 1 },
    createdAt: new Date('2024-01-15'),
    updatedAt: new Date('2024-01-15'),
    author: 'System',
    version: '1.0.0',
  },
];

// Template categories for filtering
export const TEMPLATE_CATEGORIES: TemplateCategory[] = [
  'business-process',
  'data-pipeline',
  'ai-workflow',
  'integration',
  'automation',
  'custom',
];
